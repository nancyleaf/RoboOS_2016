#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "AHRS.h"

std::shared_ptr<DoubleSolenoid> RobotMap::catapultCatapultSolenoid;
std::shared_ptr<CANTalon> RobotMap::drivetrainRightMotor1;
std::shared_ptr<CANTalon> RobotMap::drivetrainRightMotor2;
std::shared_ptr<CANTalon> RobotMap::drivetrainRightMotor3;
std::shared_ptr<CANTalon> RobotMap::drivetrainLeftMotor1;
std::shared_ptr<CANTalon> RobotMap::drivetrainLeftMotor2;
std::shared_ptr<CANTalon> RobotMap::drivetrainLeftMotor3;
std::shared_ptr<AnalogInput> RobotMap::rangeFinderSharpSensor1;
std::shared_ptr<AnalogInput> RobotMap::rangeFinderSharpSensor2;
std::shared_ptr<AnalogInput> RobotMap::rangeFinderSharpSensor3;
std::shared_ptr<CANTalon> RobotMap::ballPickupRetractorMotor;
std::shared_ptr<CANTalon> RobotMap::ballPickupPickupMotor;

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    catapultCatapultSolenoid.reset(new DoubleSolenoid(0, 0, 1));
    lw->AddActuator("Catapult", "CatapultSolenoid", catapultCatapultSolenoid);
    
    drivetrainRightMotor1.reset(new CANTalon(0));
    lw->AddActuator("Drivetrain", "RightMotor1", drivetrainRightMotor1);
    
    drivetrainRightMotor2.reset(new CANTalon(1));
    lw->AddActuator("Drivetrain", "RightMotor2", drivetrainRightMotor2);
    
    drivetrainRightMotor3.reset(new CANTalon(2));
    lw->AddActuator("Drivetrain", "RightMotor3", drivetrainRightMotor3);
    
    drivetrainLeftMotor1.reset(new CANTalon(3));
    lw->AddActuator("Drivetrain", "LeftMotor1", drivetrainLeftMotor1);
    
    drivetrainLeftMotor2.reset(new CANTalon(4));
    lw->AddActuator("Drivetrain", "LeftMotor2", drivetrainLeftMotor2);
    
    drivetrainLeftMotor3.reset(new CANTalon(5));
    lw->AddActuator("Drivetrain", "LeftMotor3", drivetrainLeftMotor3);
    
    rangeFinderSharpSensor1.reset(new AnalogInput(0));
    lw->AddSensor("RangeFinder", "SharpSensor1", rangeFinderSharpSensor1);
    
    rangeFinderSharpSensor2.reset(new AnalogInput(1));
    lw->AddSensor("RangeFinder", "SharpSensor2", rangeFinderSharpSensor2);
    
    rangeFinderSharpSensor3.reset(new AnalogInput(2));
    lw->AddSensor("RangeFinder", "SharpSensor3", rangeFinderSharpSensor3);
    
    ballPickupRetractorMotor.reset(new CANTalon(6));
    lw->AddActuator("BallPickup", "RetractorMotor", ballPickupRetractorMotor);
    
    ballPickupPickupMotor.reset(new CANTalon(7));
    lw->AddActuator("BallPickup", "PickupMotor", ballPickupPickupMotor);
}
